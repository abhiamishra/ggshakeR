[{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Exp_Threat.html","id":"using-the-calculate_threat-function","dir":"Articles","previous_headings":"","what":"Using the calculate_threat() function","title":"Guide to Expected Threat","text":"First, let’s get data! can either import data use Statsbomb’s open free dataset example, ’ll using StatsBomb’s Messi Data La Liga 2014/15: plotting, going rename columns: calculate_threat(), always write dataType data : opta statsbomb. , simply get: inspect xTData, see two new columns end: calculate_threat() producing xTStart xTEnd ’ll see, calculate_threat() put -1 areas value right calculation. calculate difference xT, simply write: give difference xT value can used passes, carries - anything start end location. Use xTStart/xTEnd single-occuring events take-ons, tackles, wish.","code":"Comp <- FreeCompetitions() %>%   filter(competition_id == 11 & season_name == \"2014/2015\")  Matches <- FreeMatches(Comp)  StatsBombData <- StatsBombFreeEvents(MatchesDF = Matches, Parallel = TRUE)  StatsBombData <- allclean(StatsBombData)  plottingData <- StatsBombData plottingData <- plottingData %>%   rename(\"x\" = \"location.x\",          \"y\" = \"location.y\",          \"finalX\" = \"pass.end_location.x\",          \"finalY\" = \"pass.end_location.y\") xTData <- calculate_threat(plottingData, dataType = \"statsbomb\") xTData <- xTData %>%   mutate(xT = xTEnd - xTStart)"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"plot_shot","dir":"Articles","previous_headings":"","what":"plot_shot()","title":"Guide to Pitch Plots","text":"Characteristics: works Understat data three types: hexbin, density, point (default) easiest Pitch Plot function use! use package, works Understat data, need understatr package. installed package, put package work session writing: use understatr package get data plot_shot(). Browse understatr package get data. sanity check, make sure dataframe columns names: X (x) Y (y) xG result name , going get Mohammed Salah’s data. learn get data, read Nandy’s excellent guide. , simply write execute following code get beautiful shot map: plot_shot() Mohammed Salah Note , can write hexbin, density, point get three different types shot maps. Try !","code":"library(understatr) shot_data <- get_player_shots(player_id = 1250) # Salah's `player_id` on understat is `1250` plot <- plot_shot(shot_data,type = \"density\")  plot"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"plot_sonar-plot_heatmap-plot_passflow","dir":"Articles","previous_headings":"","what":"plot_sonar(), plot_heatmap(), & plot_passflow()","title":"Guide to Pitch Plots","text":"three functions quite similar require. plot_sonar() gives pass sonar plot_heatmap() gives heat map pitch plot_passflow() gives pass flow map pitch key things know: plot_sonar() plot_passflow() expect passing data three functions require data minimum four columns named: x, y, finalX, finalY three functions work either Opta Statsbomb data x (indicates starting x location) y (indicates starting y location) finalX (indicates ending x location passes) finalY (indicates ending y location passes) Let’s first get data! can either import data use Statsbomb’s open free dataset example, ’ll using Statsbomb’s Messi Data LaLiga 2014/15: plotting, going rename columns: Sweet, let’s plot!","code":"library(StatsBombR)  Comp <- FreeCompetitions() %>%   filter(competition_id == 11 & season_name == \"2014/2015\")  Matches <- FreeMatches(Comp)  StatsBombData <- StatsBombFreeEvents(MatchesDF = Matches, Parallel = TRUE)  plottingData  <- allclean(StatsBombData) plottingData <- plottingData %>%   rename(\"x\" = \"location.x\",          \"y\" = \"location.y\",          \"finalX\" = \"pass.end_location.x\",          \"finalY\" = \"pass.end_location.y\")"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"plot_heatmap","dir":"Articles","previous_headings":"","what":"plot_heatmap()","title":"Guide to Pitch Plots","text":"heat map, simply select columns plot! Note don’t specify dataType since default set “statsbomb”, can simply write : plot_heatmap() LaLiga’s events 2014/15","code":"heatData  <- plottingData %>%   select(x, y, finalX, finalY)  heatplot <- plot_heatmap(heatData, type = \"bin\")  heatplot"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"plot_sonar","dir":"Articles","previous_headings":"","what":"plot_sonar()","title":"Guide to Pitch Plots","text":"pass sonar, ’re going bit data cleaning. don’t want everybody’s passing sonar - ’s redundant! purposes, want Jordi Alba’s passing sonar. First, let get passes Jordi Alba: Now can construct pass sonar! Default dataType set Statsbomb, can simply write: plot_sonar() Jordi Alba’s passes 2014/15","code":"plottingData  <- plottingData %>%   filter(type.name == \"Pass\" & team.name == \"Barcelona\" & player.name == \"Jordi Alba Ramos\") sonarPlot <- plot_sonar(plottingData)  sonarPlot"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"contributors","dir":"Articles","previous_headings":"plot_sonar()","what":"Contributors","title":"Guide to Pitch Plots","text":"Design inspiration credit goes e. pass compass part sonar production code goes Eliot Mckinley","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"plot_passflow","dir":"Articles","previous_headings":"","what":"plot_passflow()","title":"Guide to Pitch Plots","text":"Since already Jordi Alba’s passes, can just construct pass flow like : plot_passflow() Jordi Alba’s passes 2014/15","code":"passflowPlot <- plot_passflow(plottingData)  passflowPlot"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_PizzaPlots.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Guide to Creating Pizza Plots","text":"plot_pizza() function allows users plot percentile plots (popularly called pizza plots due appearance) minimal lines code. function allows plotting single comparison player plots, usage outlined . data function can scraped worldfootballR library.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_PizzaPlots.html","id":"single-player-plot","dir":"Articles","previous_headings":"","what":"Single Player Plot","title":"Guide to Creating Pizza Plots","text":"code required plot single player plot using plot_pizza() : pizza plot Tammy Abraham 7 different templates choose , forward, midfielder, winger, defender, full back, goalkeeper custom. select specific stats (subjectively, author’s opinion) reflect important attributes required position. Users option select stats using custom template well. can filter season required select colours stat subgroup according liking. season filter, please look data scraped FBRef look “term” scouting period. term determine season filtering put function. three colour theme’s background, namely dark, black white.","code":"single_player <- fb_player_scouting_report(\"https://fbref.com/en/players/f586779e/Tammy-Abraham\", pos_versus = \"primary\")  pizza <- plot_pizza(data = single_player, type = \"single\", template = \"forward\",                      colour_poss = \"#41ab5d\", colour_att = \"#fec44f\", season = \"Last 365 Days\",                      colour_def = \"#de2d26\", theme = \"dark\") pizza"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_PizzaPlots.html","id":"custom-stats---single-player","dir":"Articles","previous_headings":"Single Player Plot","what":"Custom Stats - Single Player","title":"Guide to Creating Pizza Plots","text":"Users can use custom stats within plot_pizza well.","code":"single_player$index <- 1:nrow(single_player) ## use this column for reference in stat selection  single_player <- single_player[c(3, 8, 13, 24, 42, 128, 45, 115, 133, 107, 101, 102, 26, 147),]  pizza <- plot_pizza(data = single_player, type = \"single\", template = \"forward\",                      colour_poss = \"#41ab5d\", colour_att = \"#fec44f\", season = \"Last 365 Days\",                      colour_def = \"#de2d26\", theme = \"dark\") pizza"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_PizzaPlots.html","id":"comparison-plot","dir":"Articles","previous_headings":"","what":"Comparison Plot","title":"Guide to Creating Pizza Plots","text":"comparison graph can plotted shown . pizza plot comparison, Tammy Abraham vs. D. Calvert-Lewin 7 different templates choose , forward, midfielder, winger, defender, full back, goalkeeper custom. select specific stats (subjectively, author’s opinion) reflect important attributes requires position. Users also option select stats using custom template well. seasons names players specified within function respective parameters. three colour themes background, namely dark, black white. important thing note player name’s entire name’s specified. Special care must taken remove accents name player. example, Dušan Vlahović inputted Dusan Vlahovic.","code":"data1 <- fb_player_scouting_report(\"https://fbref.com/en/players/f586779e/Tammy-Abraham\", pos_versus = \"primary\")  data2 <- fb_player_scouting_report(\"https://fbref.com/en/players/59e6e5bf/Dominic-Calvert-Lewin\", pos_versus = \"primary\")  data <- rbind(data1, data2)  comp_pizza <- plot_pizza(data = data, type = \"comparison\", template = \"forward\",                          player_1 = \"Tammy Abraham\", player_2 = \"Dominic Calvert-Lewin\",                           season_player_1 = \"Last 365 Days\", season_player_2 = \"Last 365 Days\",                          colour_compare = \"#41ab5d\", theme = \"black\") comp_pizza"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_PizzaPlots.html","id":"custom-stats---comparison-plot","dir":"Articles","previous_headings":"Comparison Plot","what":"Custom Stats - Comparison Plot","title":"Guide to Creating Pizza Plots","text":"using stat selections comparison plots, following format used.","code":"data1 <- fb_player_scouting_report(\"https://fbref.com/en/players/f586779e/Tammy-Abraham\", pos_versus = \"primary\") data2 <- fb_player_scouting_report(\"https://fbref.com/en/players/59e6e5bf/Dominic-Calvert-Lewin\", pos_versus = \"primary\")  data1$index <- 1:nrow(data1) ## reference data2$index <- 1:nrow(data2) ## reference  data1 <- data1[c(3, 8, 13, 24, 42, 128, 45, 115, 133, 107, 101, 102, 26, 147),] data2 <- data2[c(3, 8, 13, 24, 42, 128, 45, 115, 133, 107, 101, 102, 26, 147),]  data <- rbind(data1, data2)  comp_pizza <- plot_pizza(data = data, type = \"comparison\", template = \"forward\",                          player_1 = \"Tammy Abraham\", player_2 = \"Dominic Calvert-Lewin\",                           season_player_1 = \"Last 365 Days\", season_player_2 = \"Last 365 Days\",                          colour_compare = \"#41ab5d\", theme = \"black\") comp_pizza"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_PizzaPlots.html","id":"contributors","dir":"Articles","previous_headings":"","what":"Contributors","title":"Guide to Creating Pizza Plots","text":"big thanks Robin Wilhelmus tutorial helped create plots function. Thanks Ham inspiring design comparison pizza plots excellent Football Slices project.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Abhishek Amol Mishra. Author, maintainer. Harsh Krishna. Author.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mishra , Krishna H (2022). ggshakeR: Analytics Visualization Package Soccer Data. R package version 0.0.0.9000, https://github.com/abhiamishra/ggshakeR.","code":"@Manual{,   title = {ggshakeR: Analytics and Visualization Package for Soccer Data},   author = {Abhishek Amol Mishra and Harsh Krishna},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://github.com/abhiamishra/ggshakeR}, }"},{"path":"https://abhiamishra.github.io/ggshakeR/index.html","id":"ggshaker-","dir":"","previous_headings":"","what":"Analytics and Visualization Package for Soccer Data","title":"Analytics and Visualization Package for Soccer Data","text":"Welcome ggshakeR! R’s -inclusive package visualization analysis publicly available soccer data. package aims provide people interested football analysis visualization platform learn also learning new language time. package designed work free soccer data , now, include: FBref StatsBomb Open Dataset Understat Let’s get started package!","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/index.html","id":"getting-started-with-ggshaker","dir":"","previous_headings":"","what":"Getting Started With ggshakeR","title":"Analytics and Visualization Package for Soccer Data","text":"First things first, install R RStudio. R actual language RStudio IDE help work language nice way. links download : R RStudio OK, now get ggshakeR RStudio? First install devtools package: , write actual code install ggshakeR: Now library installed ’s session just yet! package session means can actually use package: ’s ’re done! hope fun!","code":"install.packages(\"devtools\") devtools::install_github(\"abhiamishra/ggshakeR\") library(ggshakeR)"},{"path":"https://abhiamishra.github.io/ggshakeR/index.html","id":"helpful-links","dir":"","previous_headings":"","what":"Helpful Links","title":"Analytics and Visualization Package for Soccer Data","text":"helpful links get started package: Guide Pitch Plots Guide Expected Threat Guide Pizza Plots","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/index.html","id":"credit","dir":"","previous_headings":"","what":"Credit","title":"Analytics and Visualization Package for Soccer Data","text":"Thank StatsBomb Ewan Henderson respective packages. big thank Ninad Barbadikar creating beautiful logo helping package general. Thank Jase Ziv help package WorldFootballR took inspiration .","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/index.html","id":"contact-and-support","dir":"","previous_headings":"","what":"Contact and Support","title":"Analytics and Visualization Package for Soccer Data","text":"Tell friends ggshakeR shake lives away! can contact email Twitter Powered Chatalytics™️ Owner Creator: Abhishek Amol Mishra","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/index.html","id":"licenses-used","dir":"","previous_headings":"","what":"Licenses Used","title":"Analytics and Visualization Package for Soccer Data","text":"Torvaney ggsoccer package used package creation pitches. use adheres MIT License provided. Licensing Copyright Statement: Copyright (c) 2019 Benjamin Torvaney Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Abhishek . Mishra Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/calculate_threat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating xT for passes, carries, etc — calculate_threat","title":"Calculating xT for passes, carries, etc — calculate_threat","text":"Calculating xT passes, carries, etc","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/calculate_threat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating xT for passes, carries, etc — calculate_threat","text":"","code":"calculate_threat(eventData, dataType = \"opta\")"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/calculate_threat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating xT for passes, carries, etc — calculate_threat","text":"eventData dataframe stores data. Must contain starting x,y locations ending x,y locations: x, y, finalX, finalY dataType indicator type data eventData. Currently, options include \"opta\" (default) \"statsbomb\"","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/calculate_threat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating xT for passes, carries, etc — calculate_threat","text":"returns dataframe object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/calculate_threat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculating xT for passes, carries, etc — calculate_threat","text":"","code":"if (FALSE) { endResult <- calculate_threat(test, dataType = \"statsbomb\", x_col = \"location.x\",                               y_col = \"location.y\", xend_col = \"pass.end_location.x\",                               yend_col = \"pass.end_location.y\") endResult }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting heatmap — plot_heatmap","title":"Plotting heatmap — plot_heatmap","text":"function allows plot various types heatmaps starting x y coordinates: hex bin heatmap, density heatmap, bin heatmap","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting heatmap — plot_heatmap","text":"","code":"plot_heatmap(   eventData,   type = \"\",   theme = \"\",   dataType = \"statsbomb\",   bin = 20 )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting heatmap — plot_heatmap","text":"eventData dataframe stores data. Dataframe must contain atleast following columns: x, y type indicates type heatmap plot. \"hex\" indicates hex bins, \"density\" indicates density (default), \"bin\" indicates bin heatmap pass theme indicates theme map must shown : dark (default), white, rose, almond dataType Type data put : opta statsbomb. Default set \"statsbomb\" bin indicates size bin construct heatmap type \"bin\". Default set 20.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting heatmap — plot_heatmap","text":"returns ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting heatmap — plot_heatmap","text":"","code":"if (FALSE) { plot <- plot_heatmap(touchData, type = \"hex\") plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pass.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting passes — plot_pass","title":"Plotting passes — plot_pass","text":"function allows plot various types plots passes sort input. Data entered must columns want plot . Compatible, right now, StatsBomb data ! Returns ggplot object.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting passes — plot_pass","text":"","code":"plot_pass(   pass_data,   plotType = \"sep\",   prog = FALSE,   cross = FALSE,   shot = FALSE,   switch = FALSE,   distance = \"\",   outcome = \"all\",   team = \"\",   player_fname = \"\",   player_lname = \"\",   theme = \"\" )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting passes — plot_pass","text":"pass_data dataframe stores passing data. Must contain starting x,y ending x,y locations well player name column plotType indicates type plot pass. \"sep\" separates successful unsuccessful passes. \"\" plots passes one pitch. Default = \"sep\" prog indicates whether map progressive passes cross indicates whether map crosses shot indicates whether map shot assists switch indicates whether map switches play distance indicates distance want map outcome indicates whether want successful (\"suc\"), unsuccessful (\"unsuc\"), (\"\") team indicates team's pass map one wants see theme indicates theme map must shown : dark (default), white, rose, almond background Pick white dark background. player indicates player's pass map one wants see","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting passes — plot_pass","text":"returns ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting passes — plot_pass","text":"","code":"if (FALSE) { plot  <- plot_pass(pass_data, plotType = \"def\", prog = TRUE, team = \"Barcelona\", player_fname = \"Lionel\") plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_passflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Passflow plot function — plot_passflow","title":"Passflow plot function — plot_passflow","text":"function takes dataframe binsizes make passflow map. Compatible, right now, StatsBomb data . Returns ggplot object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_passflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Passflow plot function — plot_passflow","text":"","code":"plot_passflow(pass_data, bin_size = 0, dataType = \"statsbomb\")"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_passflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Passflow plot function — plot_passflow","text":"pass_data Dataframe must house pass data must contain atleast following columns: x, y, finalX, finalY bin_size Details binsize passflow needs bin . Default 20. dataType Type data put : opta statsbomb. Default set \"statsbomb\"","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_passflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Passflow plot function — plot_passflow","text":"returns ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_passflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Passflow plot function — plot_passflow","text":"","code":"if (FALSE) { plot <- plot_passflow(data, bin_size = 30) plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pizza.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for plotting percentile/pizza plots — plot_pizza","title":"Function for plotting percentile/pizza plots — plot_pizza","text":"function allows data, scraped FBref, used plotting single comparison percentile plots.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pizza.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for plotting percentile/pizza plots — plot_pizza","text":"","code":"plot_pizza(   data,   type = \"\",   template = \"\",   colour_poss,   colour_att,   colour_def,   player_1,   player_2,   colour_compare,   season,   season_player_1,   season_player_2,   theme = \"\" )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pizza.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for plotting percentile/pizza plots — plot_pizza","text":"data houses data. Dataframe can contain either one player two depending type plot made. type Type plot -> single comparison. template selecting group pre-selected metrics position position namely: forward, winger, midfielder, defender, goalkeeper, full back custom. colour_poss selecting colour possession group stats. used single player plot. colour_att selecting colour attacking group stats. used single player plot. colour_def selecting colour defense group stats. used single player plot. player_1 selecting first player. used comparison plot. player_2 selecting second player. used comparison plot. colour_compare selecting colour comparison used comparison plot. season Specify season pick single player pizza chart. Pick scouting period scouting period column data. season_player_1 Specify season pick first player pizza chart season_player_2 Specify season pick second player pizza chart theme Specify theme pizza chart -> dark, black, white. Default set black","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pizza.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for plotting percentile/pizza plots — plot_pizza","text":"ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pizza.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for plotting percentile/pizza plots — plot_pizza","text":"best image quality use: ggsave(\"image.png\", width = 2900, height = 2800, units = \"px\")","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pizza.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for plotting percentile/pizza plots — plot_pizza","text":"","code":"if (FALSE) { plot1 <- plot_pizza(data = data, type = \"comparison\", template = \"midfielder\",                     player_1 = \"Nicolo Barella\", player_2 = \"Ilkay Gundogan\",                     season_player_1 = \"Last 365 Days\", season_player_2 = \"Last 365 Days\",                     colour_compare = \"lightgreen\", theme = \"black\") plot1  plot2 <- plot_pizza(data = data1, type = \"single\", template = \"midfielder\",                     colour_poss = \"green\", colour_att = \"lightblue\", season = \"Last 365 Days\",                     colour_def = \"red\", theme = \"dark\") plot2 }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting scatter plots — plot_scatter","title":"Plotting scatter plots — plot_scatter","text":"function allows plot various types plots passes sort input. Compatible data frame data type. Returns ggplot object.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting scatter plots — plot_scatter","text":"","code":"plot_scatter(   data,   scatter_x = \"\",   scatter_y = \"\",   sc_label = \"\",   set_size_num = 5,   set_size_var = \"\",   set_color_num = \"red\",   set_color_var = \"\",   theme = \"classic\",   scatter_title = \"\",   title_size = 25,   scatter_subtitle = \"\",   subt_size = 15,   scatter_cap = \"\",   cap_size = 10 )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting scatter plots — plot_scatter","text":"data dataframe passed plotting. scatter_x name column name data used x-axis scatter_y name column name data used y-axis sc_label name column name data label scatter plot set_size_num sets size points set constant. Default size = 5. set_size_var Enter name column name data set size based variable. set_color_num sets color points set constant. Can enter hexcode valid ggplot2 color. Default = \"red\" set_color_var Enter name column name data set color based variable. theme decide theme plot four choices: classic, minimal, grey, bw. Default = \"classic\" scatter_title pick title scatter plot title_size sets size title scatter plot. Default size = 25. subt_size sets size subtitle scatter plot Default size =15. scatter_cap pick caption scatter plot cap_size sets size caption scatter plot. Default size = 10. scatter_subtile pick subtitle scatter plot","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting scatter plots — plot_scatter","text":"returns ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting scatter plots — plot_scatter","text":"","code":"if (FALSE) { plot <- plot_scatter(dtaa, scatter_x = \"player\", scatter_y = \"age\", sc_label = \"team\") plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_shot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for plotting shots — plot_shot","title":"Function for plotting shots — plot_shot","text":"function allows data, scraped Understat, used plotting shots.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_shot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for plotting shots — plot_shot","text":"","code":"plot_shot(   shotdata,   type = \"\",   bin_size = 30,   highlight_goals = \"\",   avg_loc = \"\",   theme = \"\" )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_shot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for plotting shots — plot_shot","text":"shotdata Dataframe houses shot data. Dataframe must contain atleast following columns: X,Y,xG,result,name type Type showcasing shotmap: hexbin, density, point (default) bin_size Bin size creating bins. Use using hexbin shotmap. Default = 30. highlight_goals choose display goals different colour. avg_loc removing lines denoting average location shots need . theme Theme preferences display: dark (default), white, rose, almond","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_shot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for plotting shots — plot_shot","text":"ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_shot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for plotting shots — plot_shot","text":"","code":"if (FALSE) { plot <- plot_shot(shotdata, type = \"hexbin\", bin_size = 20, avg_loc = TRUE, highlight_goals = FALSE) }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_sonar.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for plotting pass sonars — plot_sonar","title":"Function for plotting pass sonars — plot_sonar","text":"function allows data, can Opta Statsbomb, used plotting pass sonars.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_sonar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for plotting pass sonars — plot_sonar","text":"","code":"plot_sonar(sonarData, dataType = \"statsbomb\", titlePlot = \"\")"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_sonar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for plotting pass sonars — plot_sonar","text":"sonarData Dataframe houses pass data. Dataframe must contain atleast following columns: x, y, finalX, finalY dataType Type data put : opta statsbomb. Default set \"statsbomb\" titlePlot Title passing sonar plot","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_sonar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for plotting pass sonars — plot_sonar","text":"ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_sonar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for plotting pass sonars — plot_sonar","text":"","code":"if (FALSE) { plot <- plot_sonar(sonarData, dataType = \"statsbomb\") plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Create timeline charts (xG) using event data. — plot_timeline","title":"Create timeline charts (xG) using event data. — plot_timeline","text":"function allows make match timelines using data collected event--event.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create timeline charts (xG) using event data. — plot_timeline","text":"","code":"plot_timeline(   data,   match_year,   team_home,   team_away,   home_color,   away_color,   theme = \"\" )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create timeline charts (xG) using event data. — plot_timeline","text":"data dataset used. team_home home team according data. team_away away team according data. home_color colour line home team. away_color colour line away team. theme select colours. Choose 4 themes -> dark, almond, rose, white.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_timeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create timeline charts (xG) using event data. — plot_timeline","text":"ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_timeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create timeline charts (xG) using event data. — plot_timeline","text":"","code":"if (FALSE) { plot <- plot_timeline(data = data, match_year = 2021, team_home = \"Manchester United\", team_away = \"Liverpool\",                       home_color = \"#e31a1c\", away_color = \"#980043\", theme = \"dark\") plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_trendline.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for plotting xG Trendline with FBref/ StatsBomb data. — plot_trendline","title":"Function for plotting xG Trendline with FBref/ StatsBomb data. — plot_trendline","text":"data can scraped FBref. Dataframe passed must following column names:  Date (format: year-month-day).yyyy-mm-dd,  Home_xG (xG Home Team),  Away_xG (xG Away Team),  Home (Home Team),  Away (Away Team)","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_trendline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for plotting xG Trendline with FBref/ StatsBomb data. — plot_trendline","text":"","code":"plot_trendline(data, team, colour_xg, colour_xga, roll_avg, theme = \"\")"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_trendline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for plotting xG Trendline with FBref/ StatsBomb data. — plot_trendline","text":"data dataset used. Select number matches wanted viz beforehand. team select specific team viz. Team must accurate per FBref specifications. colour_xg selecting colour xGoals. colour_xga selecting colour xGoalsAgainst. roll_avg setting rolling average data. theme select theme 4 options -> dark, almond, rose, white.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_trendline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for plotting xG Trendline with FBref/ StatsBomb data. — plot_trendline","text":"best clarity, export plot 2000x1000 png","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_trendline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for plotting xG Trendline with FBref/ StatsBomb data. — plot_trendline","text":"","code":"if (FALSE) { plot <- plot_trendline(data = pl, team = \"Tottenham\",                        colour_xg = \"#08519c\", colour_xga = \"#cb181d\",                        roll_avg = 10, theme = \"dark\") plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/xTGrid.html","id":null,"dir":"Reference","previous_headings":"","what":"xT calculation data for analysis — xTGrid","title":"xT calculation data for analysis — xTGrid","text":"simple dataframe used calculating expected threat values","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/xTGrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xT calculation data for analysis — xTGrid","text":"","code":"xTGrid"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/xTGrid.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"xT calculation data for analysis — xTGrid","text":"dataframe 12 columns 8 rows spanning football pitch.","code":""}]
