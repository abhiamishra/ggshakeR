[{"path":[]},{"path":"https://abhiamishra.github.io/ggshakeR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Abhishek . Mishra Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_EPV.html","id":"using-the-calculate_epv-function","dir":"Articles","previous_headings":"","what":"Using the calculate_epv() function","title":"Guide to Expected Possession Value","text":"First, let’s get data! can either import data use Statsbomb’s open free dataset example, ’ll using StatsBomb’s Messi Data La Liga 2014/15: plotting, going rename columns: calculate_epv(), always write type data : opta statsbomb. , simply get: inspect EPVData, see two new columns end: calculate_epv() producing EPVStart EPVEnd ’ll see, calculate_epv() put -1 areas value right calculation. calculate difference EPV, simply write: give difference EPV value can used passes, carries - anything start end location. Use EPVStart/EPVEnd single-occuring events take-ons, tackles, wish.","code":"library(StatsBombR)  Comp <- FreeCompetitions() %>%   filter(competition_id == 11 & season_name == \"2014/2015\") Matches <- FreeMatches(Comp) StatsBombData <- free_allevents(MatchesDF = Matches, Parallel = TRUE) StatsBombData <- allclean(StatsBombData)  plottingData <- StatsBombData plottingData <- plottingData %>%   rename(\"x\" = \"location.x\",          \"y\" = \"location.y\",          \"finalX\" = \"pass.end_location.x\",          \"finalY\" = \"pass.end_location.y\") EPVData <- calculate_epv(plottingData, type = \"statsbomb\") EPVData <- EPVData %>%   mutate(EPV = EPVEnd - EPVStart)"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Exp_Threat.html","id":"using-the-calculate_threat-function","dir":"Articles","previous_headings":"","what":"Using the calculate_threat() function","title":"Guide to Expected Threat","text":"First, let’s get data! can either import data use Statsbomb’s open free dataset example, ’ll using StatsBomb’s Messi Data La Liga 2014/15: plotting, going rename columns: calculate_threat(), always write type data : opta statsbomb. , simply get: inspect xTData, see two new columns end: calculate_threat() producing xTStart xTEnd ’ll see, calculate_threat() put -1 areas value right calculation. calculate difference xT, simply write: give difference xT value can used passes, carries - anything start end location. Use xTStart/xTEnd single-occuring events take-ons, tackles, wish.","code":"library(StatsBombR)  Comp <- FreeCompetitions() %>%   filter(competition_id == 11 & season_name == \"2014/2015\") Matches <- FreeMatches(Comp) StatsBombData <- free_allevents(MatchesDF = Matches, Parallel = TRUE) StatsBombData <- allclean(StatsBombData)  plottingData <- StatsBombData plottingData <- plottingData %>%   rename(\"x\" = \"location.x\",          \"y\" = \"location.y\",          \"finalX\" = \"pass.end_location.x\",          \"finalY\" = \"pass.end_location.y\") ## NOTE: from version 0.2.0 ALL function arguments are now in snake_case ## 'dataType' is now 'data_type', etc. xTData <- calculate_threat(data = plottingData, type = \"statsbomb\") xTData <- xTData %>%   mutate(xT = xTEnd - xTStart)"},{"path":[]},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"plot_shot","dir":"Articles","previous_headings":"Understat","what":"plot_shot()","title":"Guide to Pitch Plots","text":"Characteristics: works Understat data three types: hexbin, density, point (default) easiest Pitch Plot function use! use function, works Understat data, need understatr package. installed package, put package work session writing: use understatr package get data plot_shot(). Browse understatr package get data. sanity check, make sure dataframe columns names: X (x) Y (y) xG result name , going get Mohammed Salah’s data. learn get data, read Nandy’s excellent guide. , simply write execute following code get beautiful shot map: plot_shot() Mohammed Salah additional feature provided couple arguments within function form highlight_goals average_location. Use toggling TRUE FALSE. Note , can write “hexbin”, “density”, “point” get three different types shot maps. However, highlight_goals parameter works point shot maps. Try !","code":"library(understatr) shot_data <- get_player_shots(player_id = 1250) # Salah's `player_id` on Understat is `1250` plot <- plot_shot(data, type = \"density\")  plot plot <- plot_shot(shot_data, highlight_goals = TRUE, average_location = FALSE) plot"},{"path":[]},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"plot_sonar-plot_heatmap-plot_pass-plot_passflow","dir":"Articles","previous_headings":"Opta & StatsBomb","what":"plot_sonar(), plot_heatmap(), plot_pass() & plot_passflow()","title":"Guide to Pitch Plots","text":"three functions quite similar require. plot_sonar() gives pass sonar plot_heatmap() gives heat map pitch plot_pass() gives passes pitch plot_passflow() gives pass flow map pitch key things know: plot_sonar(), plot_pass() plot_passflow() expect passing data three functions require data minimum four columns named: x, y, finalX, finalY three functions work either Opta Statsbomb data three functions need minimum 4 columns named: x (indicates starting x location) y (indicates starting y location) finalX (indicates ending x location passes) finalY (indicates ending y location passes) Let’s first get data! can either import data use Statsbomb’s open free dataset example, ’ll using StatsBomb’s Messi Data La Liga 2014/15: plotting, going rename columns: Sweet, let’s plot!","code":"library(StatsBombR)  Comp <- FreeCompetitions() %>%   filter(competition_id == 11 & season_name == \"2014/2015\") Matches <- FreeMatches(Comp) StatsBombData <- free_allevents(MatchesDF = Matches, Parallel = TRUE) plotting_data  <- allclean(StatsBombData) plotting_data <- plotting_data %>%   rename(\"x\" = \"location.x\",          \"y\" = \"location.y\",          \"finalX\" = \"pass.end_location.x\",          \"finalY\" = \"pass.end_location.y\")"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"plot_heatmap","dir":"Articles","previous_headings":"Opta & StatsBomb > plot_sonar(), plot_heatmap(), plot_pass() & plot_passflow()","what":"plot_heatmap()","title":"Guide to Pitch Plots","text":"heat map, simply select columns plot! Type options include bin, hex, density jdp. Note don’t specify data_type since default set “statsbomb”, can simply write : plot_heatmap() La Liga’s events 2014/15","code":"heat_data <- plotting_data %>%   select(x, y)  heatPlot <- plot_heatmap(data = heat_data, type = \"bin\")  heatPlot"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"plot_sonar","dir":"Articles","previous_headings":"Opta & StatsBomb > plot_sonar(), plot_heatmap(), plot_pass() & plot_passflow()","what":"plot_sonar()","title":"Guide to Pitch Plots","text":"pass sonar, ’re going bit data cleaning. don’t want everybody’s passing sonar - ’s redundant! purposes, want Jordi Alba’s passing sonar. First, let get passes Jordi Alba: Now can construct pass sonar! Default data_type set “statsbomb”, can simply write: plot_sonar() Jordi Alba’s passes 2014/15","code":"plotting_data_alba  <- plotting_data %>%   filter(type.name == \"Pass\" & team.name == \"Barcelona\" & player.name == \"Jordi Alba Ramos\") sonarPlot <- plot_sonar(data = plotting_data_alba)  sonarPlot"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"plot_pass","dir":"Articles","previous_headings":"Opta & StatsBomb > plot_sonar(), plot_heatmap(), plot_pass() & plot_passflow()","what":"plot_pass()","title":"Guide to Pitch Plots","text":"can create pass map Jordi Alba’s passes particular match using plot_pass() function. plot_pass() Jordi Alba’s passes match 2014/15","code":"plotting_data_alba_single <- plotting_data_alba %>%   filter(match_id == 70264)  passPlot <- plot_pass(data = plotting_data_alba_single,                        progressive_pass = TRUE, type = \"all\") passPlot"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"plot_passflow","dir":"Articles","previous_headings":"Opta & StatsBomb > plot_sonar(), plot_heatmap(), plot_pass() & plot_passflow()","what":"plot_passflow()","title":"Guide to Pitch Plots","text":"Since already Jordi Alba’s passes, can just construct pass flow like : plot_passflow() Jordi Alba’s passes 2014/15","code":"passflowPlot <- plot_passflow(data = plotting_data_alba)  passflowPlot"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"plot_convexhull","dir":"Articles","previous_headings":"Opta & StatsBomb","what":"plot_convexhull()","title":"Guide to Pitch Plots","text":"function allows user use event data plot convex hulls multiple single player. works Opta StatsBomb data requires following columns: x y finalX finalY playerId (Player name’s) Let us plot using data set already . plot_convexhull() FC Barcelona players match Note need pass parameters function data set already specified default data_type set “statsbomb”. using Opta data, set data_type . Manipulate data set per needs use-case. can also plot single player convex hull filtering specific name pipe applying function. can also alter title colors wish using relevant parameters. example: plot_convexhull() Jordi Alba’s passes match","code":"unique(plotting_data$match_id) # Find all match ID's from the data set  convexPlot <- plotting_data %>%   filter(match_id == 266631,          team.name == \"Barcelona\") %>%   plot_convexhull()  convexPlot convexPlot <- plotting_data %>%   filter(match_id == 266631,          player.name == \"Jordi Alba Ramos\") %>%   plot_convexhull(color = \"#41ab5d\", title = \"Jordi Alba Convex Hull\")  convexPlot"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"plot_voronoi","dir":"Articles","previous_headings":"Opta & StatsBomb","what":"plot_voronoi()","title":"Guide to Pitch Plots","text":"function allows user use event data plot voronoi plot set points. works Opta StatsBomb data requires following columns: x y Let us plot using data set already . First, ’ll get summarized data set players mean positions. , can simply use voronoi plot function: plot_voronoi() FC Barcelona players mean positions note remember, voronoi plot works best summarized set points. example, see something like start locations player’s passes, use convexhull() see team’s mean position player, use voronoi() Note need pass parameters function data set already specified default data_type set “statsbomb”. using Opta data, set data_type . Manipulate data set per needs use-case. can also fill voronoi plots based values. need fill value another column. usual, can use piping apply function directly one line. example, show EPV values calculated calculate_epv(). , repeat code small change: plot_voronoi() FC Barcelona players mean positions EPV","code":"finalData <- plotting_data %>%   filter(team.name == \"Barcelona\") %>%   group_by(player.name) %>%   summarise_at(vars(x, y, minute), list(name = mean), na.rm = TRUE) %>%   na.omit() %>%   rename(\"x\" = \"x_name\") %>%   rename(\"y\" = \"y_name\") plotVoronoi <- plot_voronoi(finalData) plotVoronoi threatData <- calculate_epv(plotting_data) finalData <- threatData %>%   filter(team.name == \"Barcelona\") %>%   group_by(player.name) %>%   filter(EPVStart != -1) %>% #Getting rid of -1 as that as how we identify null values   #We get the mean and sum of these three columns   summarise_at(vars(x, y, EPVStart), list(name = mean, sum), na.rm = TRUE) %>%   na.omit() %>%   rename(\"x\" = \"x_name\") %>%   rename(\"y\" = \"y_name\") %>%   rename(\"EPV_Start\" =  \"EPVStart_fn1\") #Renaming the relevant columns  #Plot voronoi plot  plotVoronoi <- plot_voronoi(data = finalData,                              fill = \"EPV_Start\",                              title = \"Barcelona Voronoi Diagram\") plotVoronoi"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"plot_passnet","dir":"Articles","previous_headings":"Opta & StatsBomb","what":"plot_passnet()","title":"Guide to Pitch Plots","text":"function allows users plot pass networks team particular match using event data StatsBomb Opta. demonstrating use function data types.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"statsbomb","dir":"Articles","previous_headings":"Opta & StatsBomb > plot_passnet()","what":"StatsBomb","title":"Guide to Pitch Plots","text":"Plotting pass network StatsBomb data pretty simple. need standard StatsBomb data set 4 coordinate columns renamed x, y, finalX finalY, line done functions far. select specific match plot away! plot_passnet() FC Barcelona match team_name one parameter needs used , parameters set default. Work different colors using scale_color parameter, different stats using scale_stat alter subtitle subtitle wish !","code":"unique(plotting_data$match_id) # Find all match ID's from the data set  passnetPlot <- plotting_data %>%   filter(match_id == 266631) %>%   plot_passnet(team_name = \"Barcelona\")  passnetPlot"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"opta","dir":"Articles","previous_headings":"Opta & StatsBomb > plot_passnet()","what":"Opta","title":"Guide to Pitch Plots","text":"Using plot_passnet() Opta data bit complicated. fear ! guiding entire process get hang . Firstly need Opta data set. created data set perfectly mimic Opta data set available within package use. Call running: Now data set, let us see columns require function: x y finalX finalY minute playerId (Player name’s) teamId (Team name’s) outcome (Outcome pass) type (Type event) Note playerId teamId columns need contain player team names. data set hands contains relevant Id’s. Let us fix transform data set one accepted function. used case_when() function link player team Id’s relevant names. still work left . cleaned data set. now ready used function. important note steps might necessary data sets. make sure following correct format function. data set exact column names column type specifications work within function without errors. Let us now plot. plot_passnet() using opta data","code":"optadata <- ggshakeR::SampleEventData optadata <- optadata %>%   mutate(teamId = case_when(teamId == 2151 ~ \"Team 1\",                             teamId == 3070 ~ \"Team 2\")) %>%   mutate(playerId = case_when(playerId == \"1\" ~ \"Cameron\",                               playerId == \"2\" ~ \"Sahaj\",                               playerId == \"3\" ~ \"Trevor\",                               playerId == \"4\" ~ \"Jolene\",                               playerId == \"5\" ~ \"David\",                               playerId == \"6\" ~ \"Marcus\",                               playerId == \"7\" ~ \"Ryo\",                               playerId == \"8\" ~ \"Anthony\",                               playerId == \"9\" ~ \"Aabid\",                               playerId == \"10\" ~ \"Kylian\",                               playerId == \"11\" ~ \"Harry\",                               playerId == \"12\" ~ \"Victor\",                               playerId == \"13\" ~ \"Jesse\",                               playerId == \"14\" ~ \"Borges\",                               playerId == \"15\" ~ \"Miguel\",                               playerId == \"16\" ~ \"Alex\",                               playerId == \"17\" ~ \"Abdul\",                               playerId == \"18\" ~ \"Eric\",                               playerId == \"19\" ~ \"Marten\",                               playerId == \"20\" ~ \"Robert\",                               playerId == \"21\" ~ \"Lionel\",                               playerId == \"22\" ~ \"Dean\",                               playerId == \"23\" ~ \"Aaron\",                               playerId == \"24\" ~ \"Benjamin\",                               playerId == \"25\" ~ \"Diego\",                               playerId == \"26\" ~ \"Abhishek\",                               playerId == \"27\" ~ \"Samuel\",                               playerId == \"28\" ~ \"Edward\",                               playerId == \"29\" ~ \"Malik\",                               playerId == \"30\" ~ \"Albert\",                               playerId == \"31\" ~ \"Paul\",                               playerId == \"32\" ~ \"Smith\",                               playerId == \"33\" ~ \"Seth\",                               playerId == \"34\" ~ \"Mohammed\",                               playerId == \"35\" ~ \"Eder\",                               playerId == \"36\" ~ \"Adam\",                               playerId == \"37\" ~ \"Harsh\",                               playerId == \"38\" ~ \"Jorge\",                               playerId == \"39\" ~ \"Zak\",                               playerId == \"40\" ~ \"Brandon\")) optadata <- optadata %>%   rename(finalX = endX,          finalY = endY) passnetPlot <- plot_passnet(data = optadata, data_type = \"opta\",                              team_name = \"Team 1\", scale_stat = \"EPV\",                              scale_color = \"#fec44f\")  passnetPlot"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Pitch_Plots.html","id":"contributors","dir":"Articles","previous_headings":"","what":"Contributors","title":"Guide to Pitch Plots","text":"people credit helping creation pitch plot functions. design plot_sonar() inspired pass compass plot designed e. Part sonar production code also credited Eliot McKinley. Credit Joe Gallagher excellent package soccermatics code used data wrangling plot_passnet() function.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_PizzaPlots.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Guide to Creating Pizza Plots","text":"plot_pizza() function allows users plot percentile plots (popularly called pizza plots due appearance) minimal lines code. function allows plotting single comparison player plots, usage outlined . data function can scraped worldfootballR library.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_PizzaPlots.html","id":"single-player-plot","dir":"Articles","previous_headings":"Introduction","what":"Single Player Plot","title":"Guide to Creating Pizza Plots","text":"code required plot single player plot using plot_pizza() : pizza plot Tammy Abraham 3 different templates choose , outfielder, goalkeeper custom. select specific stats (subjectively, author’s opinion) reflect important attributes required position. Users option select stats using custom template well. can filter season required select colors stat subgroup according liking. season filter, please look data scraped FBRef look “term” scouting period. term determine season filtering put function. three color theme’s background, namely dark, black white.","code":"library(worldfootballR)  single_player <- fb_player_scouting_report(\"https://fbref.com/en/players/f586779e/Tammy-Abraham\", pos_versus = \"primary\")  pizza <- plot_pizza(data = single_player, type = \"single\", template = \"outfielder\",                      color_possession = \"#41ab5d\", color_attack = \"#fec44f\", color_defense = \"#de2d26\",                      season = \"Last 365 Days Men's Big 5 Leagues, UCL, UEL\", theme = \"dark\")  pizza"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_PizzaPlots.html","id":"custom-stats---single-player","dir":"Articles","previous_headings":"Introduction > Single Player Plot","what":"Custom Stats - Single Player","title":"Guide to Creating Pizza Plots","text":"Users can use custom stats within plot_pizza well. First, ’ll add index column help us. , look index column, ’ll see numbers correspond statistics. Choose numbers shown select specific stats! custom pizza plot Tammy Abraham","code":"single_player$index <- 1:nrow(single_player) ## use this column for reference in stat selection single_player <- single_player[c(1,2,3,4,5,6,7,8,9,10,11,12), ]  pizza <- plot_pizza(data = single_player, type = \"single\", template = \"custom\",                      color_possession = \"#41ab5d\", color_attack = \"#fec44f\", season = \"Last 365 Days Men's Big 5 Leagues, UCL, UEL\",                      color_defense = \"#de2d26\", theme = \"dark\")  pizza"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_PizzaPlots.html","id":"comparison-plot","dir":"Articles","previous_headings":"Introduction","what":"Comparison Plot","title":"Guide to Creating Pizza Plots","text":"comparison graph can plotted shown . pizza plot comparison, Tammy Abraham vs. D. Calvert-Lewin 3 different templates choose , outfielder, goalkeeper custom. select specific stats (subjectively, author’s opinion) reflect important attributes requires position. Users also option select stats using custom template well. seasons names players specified within function respective parameters. three color themes background, namely dark, black white. important thing note player name’s entire name’s specified. Special care must taken remove accents name player. example, Dušan Vlahović inputted Dusan Vlahovic.","code":"data1 <- fb_player_scouting_report(\"https://fbref.com/en/players/f586779e/Tammy-Abraham\", pos_versus = \"primary\") data2 <- fb_player_scouting_report(\"https://fbref.com/en/players/59e6e5bf/Dominic-Calvert-Lewin\", pos_versus = \"primary\")  data <- rbind(data1, data2)  comp_pizza <- plot_pizza(data = data, type = \"comparison\", template = \"outfielder\",                          player_1 = \"Tammy Abraham\", player_2 = \"Dominic Calvert-Lewin\",                           season_player_1 = \"Last 365 Days Men's Big 5 Leagues, UCL, UEL\",                           season_player_2 = \"Last 365 Days Men's Big 5 Leagues, UCL, UEL\",                          color_compare = \"#41ab5d\", theme = \"black\") comp_pizza"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_PizzaPlots.html","id":"custom-stats---comparison-plot","dir":"Articles","previous_headings":"Introduction > Comparison Plot","what":"Custom Stats - Comparison Plot","title":"Guide to Creating Pizza Plots","text":"using stat selections comparison plots, following format used. Just like custom stats single plots, make index column first. , select numbers reflect stats plot away! custom pizza plot Tammy Abraham","code":"data1 <- fb_player_scouting_report(\"https://fbref.com/en/players/f586779e/Tammy-Abraham\", pos_versus = \"primary\") data2 <- fb_player_scouting_report(\"https://fbref.com/en/players/59e6e5bf/Dominic-Calvert-Lewin\", pos_versus = \"primary\")  data1$index <- 1:nrow(data1) ## reference for stats selection data2$index <- 1:nrow(data2) ## reference for stats selection data1 <- data1[c(1,2,3,4,5,6,7,8,9,10,11,12), ] data2 <- data2[c(1,2,3,4,5,6,7,8,9,10,11,12), ]  data <- rbind(data1, data2)  comp_pizza <- plot_pizza(data = data, type = \"comparison\", template = \"custom\",                          player_1 = \"Tammy Abraham\", player_2 = \"Dominic Calvert-Lewin\",                           season_player_1 = \"Last 365 Days Men's Big 5 Leagues, UCL, UEL\",                           season_player_2 = \"Last 365 Days Men's Big 5 Leagues, UCL, UEL\",                          color_compare = \"#41ab5d\", theme = \"black\") comp_pizza"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_PizzaPlots.html","id":"save","dir":"Articles","previous_headings":"Introduction","what":"Save","title":"Guide to Creating Pizza Plots","text":"might notice output ggplot2 plot appears warped. save plots without issue, following code run.","code":"# install.packages(\"ggplot2\") library(ggplot2) #' The \"bg\" parameter is to be set w.r.t the theme of the plot. #' \"dark\" = \"#0d1117\" #' \"black\" = \"black\" #' \"white\" = \"white\" ggsave(\"image.png\", bg = \"black\", width = 3000, height = 2800, units = \"px\")"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_PizzaPlots.html","id":"adding-player-image","dir":"Articles","previous_headings":"Introduction","what":"Adding Player Image","title":"Guide to Creating Pizza Plots","text":"section, shall detail process adding image player centre pizza plot. can done via magick package. , first save original pizza plot PNG save PNG image player question internet. Make sure plot image working directory (file). Follow steps detailed . Image added plot Tammy Abraham","code":"# install.packages(\"magick\") library(magick)  # This is a custom function. There is no need to change the code within the function. Simply run it and then use it as you would any other R function.  add_image_centre <- function(plot_path, image_path) {      ## Read in plot   fig <- image_read(plot_path)   fig <- image_resize(fig, \"1000x1000\")      ## Read in image   img <- image_read(image_path)   img <- image_scale(img, \"62x85\")      ## Overlay   image_composite(fig, img, offset = \"+471+417\") }  # Here you use the function to add the player picture to the plot image.  imagepl <- add_image_centre(plot_path = \"pizza_plot.png\", image_path = \"tammypic.png\") imagepl  # Save it as such  image_write(imagepl, \"addimage.png\")"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_PizzaPlots.html","id":"contributors","dir":"Articles","previous_headings":"Introduction","what":"Contributors","title":"Guide to Creating Pizza Plots","text":"big thanks Robin Wilhelmus tutorial helped create plots function. Thanks Ham inspiring design comparison pizza plots excellent Football Slices project.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Version_0-2-0.html","id":"calculate_threat","dir":"Articles","previous_headings":"","what":"calculate_threat()","title":"Guide to function argument changes in Version 0.2.0","text":"data: changed event_data type: changed dataType","code":"calculate_threat(data, type)"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Version_0-2-0.html","id":"plot_heatmap","dir":"Articles","previous_headings":"","what":"plot_heatmap()","title":"Guide to function argument changes in Version 0.2.0","text":"data: changed event_data type: specifically refers plot type data_type () allows specify data type (StatsBomb, Opta, etc.) data_type: changed dataType binwidth: changed bin, now argument name underlying call geom_bin2d() theme: moved last argument","code":"plot_heatmap(data, type, data_type, binwidth, theme)"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Version_0-2-0.html","id":"plot_pass","dir":"Articles","previous_headings":"","what":"plot_pass()","title":"Guide to function argument changes in Version 0.2.0","text":"data: changed pass_data progressive_pass: changed prog type: changed plot_type, specifically refers plot type plot_*() function data_type: changed dataType","code":"plot_pass(data,            type, progressive_pass,            cross, shot, switch, outcome,            theme)"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Version_0-2-0.html","id":"plot_passflow","dir":"Articles","previous_headings":"","what":"plot_passflow()","title":"Guide to function argument changes in Version 0.2.0","text":"data: changed pass_data data_type: moved come data argument binwidth: changed bin_size, now argument name underlying call geom_bin2d()","code":"plot_passflow(data, data_type, binwidth)"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Version_0-2-0.html","id":"plot_pizza","dir":"Articles","previous_headings":"","what":"plot_pizza()","title":"Guide to function argument changes in Version 0.2.0","text":"color_possession: changed color_poss color_attack: changed color_att color_defense: changed color_def","code":"plot_pizza(data, type, template,             color_possession, color_attack, color_defense, color_compare,            player_1, player_2,             season, season_player_1, season_player_2,             theme)"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Version_0-2-0.html","id":"plot_scatter","dir":"Articles","previous_headings":"","what":"plot_scatter()","title":"Guide to function argument changes in Version 0.2.0","text":"x: changed scatter_x y: changed scatter_y label: changed scatter_label title: changed scatter_title subtitle: changed scatter_subtitle subtitle_size: changed subt_size caption: changed scatter_cap caption_size: changed cap_size theme: moved end argument order","code":"plot_scatter(data, x, y, label,              set_size_num, set_size_var,              set_color_num, set_color_var,              title, title_size,              subtitle, subtitle_size,              caption, caption_size,              theme)"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Version_0-2-0.html","id":"plot_shot","dir":"Articles","previous_headings":"","what":"plot_shot()","title":"Guide to function argument changes in Version 0.2.0","text":"bins: changed bin_size, now argument name underlying call geom_hex() average_location: changed avg_loc","code":"plot_shot(data, type, bins, highlight_goals, average_location)"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Version_0-2-0.html","id":"plot_sonar","dir":"Articles","previous_headings":"","what":"plot_sonar()","title":"Guide to function argument changes in Version 0.2.0","text":"data: changed sonarData","code":"plot_sonar(data, data_type, title)"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Version_0-2-0.html","id":"plot_trendline","dir":"Articles","previous_headings":"","what":"plot_trendline()","title":"Guide to function argument changes in Version 0.2.0","text":"color_xg: changed colour_xg color_xga: changed colour_xga rolling_average: changed roll_avg","code":"plot_trendline(data, team, color_xg, color_xga, rolling_average, theme)"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Version_0-2-0.html","id":"plot_timeline","dir":"Articles","previous_headings":"","what":"plot_timeline()","title":"Guide to function argument changes in Version 0.2.0","text":"color_home: changed home_color color_away: changed away_color","code":"plot_timeline(data, match_year,                team_home, team_away,               color_home, color_away, theme)"},{"path":"https://abhiamishra.github.io/ggshakeR/articles/Guide_to_Version_0-2-0.html","id":"installing-previous-versions-of-the-package","dir":"Articles","previous_headings":"","what":"Installing previous versions of the package","title":"Guide to function argument changes in Version 0.2.0","text":"ready fully commit changes (large script {ggshakeR} functions whatever) accidentally installed new version, fear can go back install prior version package. note changes listed vignette permanent standard going forward. please take time read vignette documentation carefully can transition new argument syntax make use new functionality version 0.2.0 (beyond!) provides.","code":"## Install previous 0.1.2 version devtools::install_github(\"abhiamishra/ggshakeR@0.1.2\")"},{"path":"https://abhiamishra.github.io/ggshakeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Abhishek Amol Mishra. Author, maintainer. Harsh Krishna. Author. Ryo Nakagawara. Author.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mishra , Krishna H, Nakagawara R (2023). ggshakeR: Analytics Visualization Package Soccer Data. https://github.com/abhiamishra/ggshakeR, https://abhiamishra.github.io/ggshakeR/.","code":"@Manual{,   title = {ggshakeR: Analytics and Visualization Package for Soccer Data},   author = {Abhishek Amol Mishra and Harsh Krishna and Ryo Nakagawara},   year = {2023},   note = {https://github.com/abhiamishra/ggshakeR, https://abhiamishra.github.io/ggshakeR/}, }"},{"path":"https://abhiamishra.github.io/ggshakeR/index.html","id":"ggshaker-","dir":"","previous_headings":"","what":"Analytics and Visualization Package for Soccer Data","title":"Analytics and Visualization Package for Soccer Data","text":"Welcome ggshakeR! R’s -inclusive package visualization analysis publicly available soccer data. package aims provide people interested football analysis visualization platform learn also learning new language time. package designed work free soccer data , now, include: FBref StatsBomb Open Dataset Understat Let’s get started package!","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/index.html","id":"getting-started-with-ggshaker","dir":"","previous_headings":"","what":"Getting Started With ggshakeR","title":"Analytics and Visualization Package for Soccer Data","text":"First things first, install R RStudio. R actual language RStudio IDE help work R programming language nice way. links download : R RStudio OK, now get ggshakeR RStudio? First install devtools package: , write actual code install ggshakeR: many BIG changes made version 0.2.0. note changes permanent standard going forward. please take time read Guide Version 0.2.0 Vignette package documentation carefully can transition new argument syntax make use new functionality version 0.2.0 (beyond!) provide. want go back version 0.1.2 ’ve already installed 0.2.0 (’re yet ready edit scripts new syntax whatever), can re-install version 0.1.2 running : Now package installed, ’s session just yet! package session means can actually use package: ’s ’re done! hope fun!","code":"install.packages(\"devtools\") devtools::install_github(\"abhiamishra/ggshakeR\") devtools::install_github(\"abhiamishra/ggshakeR@0.1.2\") library(ggshakeR)"},{"path":"https://abhiamishra.github.io/ggshakeR/index.html","id":"helpful-links","dir":"","previous_headings":"","what":"Helpful Links","title":"Analytics and Visualization Package for Soccer Data","text":"helpful links get started package: Guide Pitch Plots Guide Expected Threat Guide Pizza Plots Guide Expected Possession Value Guide Version 0.2.0","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/index.html","id":"credit","dir":"","previous_headings":"","what":"Credit","title":"Analytics and Visualization Package for Soccer Data","text":"Thank StatsBomb Ewan Henderson respective packages. big thank Ninad Barbadikar creating beautiful logo helping package general. Thank Jase Ziv help package WorldFootballR took inspiration .","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/index.html","id":"contact-and-support","dir":"","previous_headings":"","what":"Contact and Support","title":"Analytics and Visualization Package for Soccer Data","text":"Tell friends ggshakeR shake lives away! can contact email Twitter Powered Chatalytics™️ Owner Creator: Abhishek Amol Mishra Authors: Harsh Krishna & Ryo Nakagawara","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/index.html","id":"licenses-used","dir":"","previous_headings":"","what":"Licenses Used","title":"Analytics and Visualization Package for Soccer Data","text":"Torvaney ggsoccer package used package creation pitches. use adheres MIT License provided. Licensing Copyright Statement: Copyright (c) 2019 Benjamin Torvaney Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/EPVGrid.html","id":null,"dir":"Reference","previous_headings":"","what":"EPV calculation data for analysis — EPVGrid","title":"EPV calculation data for analysis — EPVGrid","text":"simple dataframe used calculating expected possession values","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/EPVGrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EPV calculation data for analysis — EPVGrid","text":"","code":"EPVGrid"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/EPVGrid.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"EPV calculation data for analysis — EPVGrid","text":"dataframe 50 columns 31 rows spanning football pitch.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/SampleEventData.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample event data frame — SampleEventData","title":"Sample event data frame — SampleEventData","text":"Event dataframe play understand usage functions","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/SampleEventData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample event data frame — SampleEventData","text":"","code":"SampleEventData"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/SampleEventData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample event data frame — SampleEventData","text":"dataframe columns x, y, finalX, finalY, minute, playerId, teamId, outcome type.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/SampleSBData.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample StatsBomb event data frame — SampleSBData","title":"Sample StatsBomb event data frame — SampleSBData","text":"StatsBomb event dataframe play understand usage functions. following code used use StatsBombR: Comp <- FreeCompetitions() %>%   filter(competition_id == 11 & season_name == \"2014/2015\")   Matches <- FreeMatches(Comp)   StatsBombData <- StatsBombFreeEvents(MatchesDF = Matches, Parallel = TRUE)   plotting_data  <- allclean(StatsBombData)   plotting_data <- plotting_data %>%   rename(\"x\" = \"location.x\",   \"y\" = \"location.y\",   \"finalX\" = \"pass.end_location.x\",   \"finalY\" = \"pass.end_location.y\")","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/SampleSBData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample StatsBomb event data frame — SampleSBData","text":"","code":"SampleSBData"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/SampleSBData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample StatsBomb event data frame — SampleSBData","text":"dataframe columns x, y, finalX, finalY, rest StatsBomb columns","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/calculate_epv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating EPV for passes, carries, etc — calculate_epv","title":"Calculating EPV for passes, carries, etc — calculate_epv","text":"Calculating EPV passes, carries, etc","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/calculate_epv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating EPV for passes, carries, etc — calculate_epv","text":"","code":"calculate_epv(data, type = \"opta\")"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/calculate_epv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating EPV for passes, carries, etc — calculate_epv","text":"data dataframe stores data. Must contain starting x,y locations ending x,y locations: x, y, finalX, finalY type indicator type data eventData. Currently, options include \"opta\" (default) \"statsbomb\"","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/calculate_epv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating EPV for passes, carries, etc — calculate_epv","text":"returns dataframe object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/calculate_epv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculating EPV for passes, carries, etc — calculate_epv","text":"","code":"if (FALSE) { endResult <- calculate_epv(test, type = \"statsbomb\") endResult }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/calculate_threat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating xT for passes, carries, etc — calculate_threat","title":"Calculating xT for passes, carries, etc — calculate_threat","text":"Calculating xT passes, carries, etc","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/calculate_threat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating xT for passes, carries, etc — calculate_threat","text":"","code":"calculate_threat(data, type = \"opta\")"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/calculate_threat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating xT for passes, carries, etc — calculate_threat","text":"data dataframe stores data. Must contain starting x,y locations ending x,y locations: x, y, finalX, finalY type indicator type data data. Currently, options include \"opta\" (default) \"statsbomb\"","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/calculate_threat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating xT for passes, carries, etc — calculate_threat","text":"returns dataframe object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/calculate_threat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculating xT for passes, carries, etc — calculate_threat","text":"","code":"if (FALSE) { endResult <- calculate_threat(test, type = \"statsbomb\") endResult }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/hull_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"hull_fun — hull_fun","title":"hull_fun — hull_fun","text":"Create boundaries convex hull","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/hull_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hull_fun — hull_fun","text":"","code":"hull_fun(data)"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/hull_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"hull_fun — hull_fun","text":"x data frame","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/hull_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"hull_fun — hull_fun","text":"data frame","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_convexhull.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for plotting convex hulls — plot_convexhull","title":"Function for plotting convex hulls — plot_convexhull","text":"function allows data, can Opta StatsBomb, used plotting convex hulls top outline football pitch.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_convexhull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for plotting convex hulls — plot_convexhull","text":"","code":"plot_convexhull(   data,   data_type = \"statsbomb\",   color = \"#E74C3C\",   title = \"\",   theme = \"dark\" )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_convexhull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for plotting convex hulls — plot_convexhull","text":"data Data frame houses pass data. Opta dataframe must contain atleast following columns: x, y, finalX, finalY, playerId data_type Type data put : opta statsbomb. Default set \"statsbomb\" color color outline convex hull title Title plot theme Indicates theme map must shown : dark (default), white, rose, almond","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_convexhull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for plotting convex hulls — plot_convexhull","text":"ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_convexhull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for plotting convex hulls — plot_convexhull","text":"","code":"if (FALSE) { plot <- plot_convexhull(data = data, data_type = \"opta\", color = \"blue\", title = \"Team 1\") plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting heatmap — plot_heatmap","title":"Plotting heatmap — plot_heatmap","text":"function allows plot various types heatmaps starting x y coordinates: hex binwidth heatmap, density heatmap, binwidth heatmap","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting heatmap — plot_heatmap","text":"","code":"plot_heatmap(   data,   type = \"\",   data_type = \"statsbomb\",   binwidth = 20,   theme = \"\" )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting heatmap — plot_heatmap","text":"data dataframe stores data. Dataframe must contain atleast following columns: x, y. type indicates type heatmap plot. \"hex\" indicates hex bins, \"density\" indicates density (default), \"binwidth\" indicates binwidth heatmap pass, \"jdp\" indicates binned heatmap according jdp pitch markings. data_type Type data put : opta statsbomb. Default set \"statsbomb\" binwidth indicates size bin width construct heatmap type \"binwidth\". argument name underlying call geom_bin2d(). Default set 20. theme indicates theme map must shown : dark (default), white, rose, almond","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting heatmap — plot_heatmap","text":"returns ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting heatmap — plot_heatmap","text":"","code":"if (FALSE) { plot <- plot_heatmap(data = touchData, type = \"hex\") plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pass.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting passes — plot_pass","title":"Plotting passes — plot_pass","text":"function allows plot various types plots passes sort input. Data entered must columns want plot . Compatible StatsBomb Opta data.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting passes — plot_pass","text":"","code":"plot_pass(   data,   data_type = \"statsbomb\",   type = \"sep\",   progressive_pass = FALSE,   cross = FALSE,   shot = FALSE,   switch = FALSE,   outcome = \"all\",   theme = \"dark\" )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting passes — plot_pass","text":"data data frame stores passing data. Opta data frame must contain least following columns: x, y, finalX, finalY data_type Type data put : opta statsbomb. Default set \"statsbomb\" type indicates type plot pass. \"sep\" separates successful unsuccessful passes. \"\" plots passes one pitch. Default = \"sep\". available StatsBomb data progressive_pass indicates whether map progressive passes. available StatsBomb data cross indicates whether map crosses. available StatsBomb data shot indicates whether map shot assists. available StatsBomb data switch indicates whether map switches play. available StatsBomb data outcome indicates whether want successful (\"suc\"), unsuccessful (\"unsuc\"), (\"\"). available StatsBomb data theme indicates theme map must shown : dark (default), white, rose, almond","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting passes — plot_pass","text":"returns ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting passes — plot_pass","text":"","code":"if (FALSE) { plot  <- plot_pass(data, type = \"all\", progressive_pass = TRUE) plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_passflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Passflow plot function — plot_passflow","title":"Passflow plot function — plot_passflow","text":"function takes dataframe binsizes make passflow map. Compatible, right now, StatsBomb data . Returns ggplot object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_passflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Passflow plot function — plot_passflow","text":"","code":"plot_passflow(data, data_type = \"statsbomb\", binwidth = 0)"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_passflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Passflow plot function — plot_passflow","text":"data Dataframe must house pass data must contain atleast following columns: x, y, finalX, finalY data_type Type data put : opta statsbomb. Default set \"statsbomb\" binwidth Details bin size passflow needs bin . argument name underlying call geom_bin2d(). Default 20.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_passflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Passflow plot function — plot_passflow","text":"returns ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_passflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Passflow plot function — plot_passflow","text":"","code":"if (FALSE) { plot <- plot_passflow(data, binwidth = 30) plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_passnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for plotting pass networks — plot_passnet","title":"Function for plotting pass networks — plot_passnet","text":"function allows data, can Opta Statsbomb, used plotting pass networks.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_passnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for plotting pass networks — plot_passnet","text":"","code":"plot_passnet(   data,   data_type = \"statsbomb\",   team_name,   scale_stat = \"xT\",   scale_color = \"#E74C3C\",   subtitle = \"\",   theme = \"dark\" )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_passnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for plotting pass networks — plot_passnet","text":"data Data frame houses pass data data_type Type data put : opta statsbomb. Default set \"statsbomb\" team_name name team want pass network scale_stat Stat player node color scale. Choose \"xT\" \"EPV\" scale_color Color higher end xT/EPV color scale. Default set \"#E74C3C\" subtitle Subtitle pass network plot theme background theme -> \"dark\" \"light\"","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_passnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for plotting pass networks — plot_passnet","text":"ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_passnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for plotting pass networks — plot_passnet","text":"","code":"if (FALSE) { plot <- plot_passnet(data, data_type = \"opta\", team_name = \"Arsenal\") plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pizza.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for plotting percentile/pizza plots — plot_pizza","title":"Function for plotting percentile/pizza plots — plot_pizza","text":"function allows data, scraped FBref, used plotting single comparison percentile plots.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pizza.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for plotting percentile/pizza plots — plot_pizza","text":"","code":"plot_pizza(   data,   type = \"\",   template,   color_possession = \"#41ab5d\",   color_attack = \"#2171b5\",   color_defense = \"#fec44f\",   player_1,   player_2,   color_compare = \"#41ab5d\",   season = \"Last 365 Days Men's Big 5 Leagues, UCL, UEL\",   season_player_1 = \"Last 365 Days Men's Big 5 Leagues, UCL, UEL\",   season_player_2 = \"Last 365 Days Men's Big 5 Leagues, UCL, UEL\",   theme = \"\" )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pizza.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for plotting percentile/pizza plots — plot_pizza","text":"data Data frame can contain either one player two depending type plot made type Type plot -> single comparison template Selecting group pre-selected metrics position position namely: outfielder, goalkeeper custom color_possession Selecting color possession group stats. used single player plot color_attack Selecting color attacking group stats. used single player plot color_defense Selecting color defense group stats. used single player plot player_1 Selecting first player. used comparison plot player_2 Selecting second player. used comparison plot color_compare Selecting color comparison used comparison plot season Specify season pick single player pizza chart. Pick scouting period scouting period column data season_player_1 Specify season pick first player pizza chart season_player_2 Specify season pick second player pizza chart theme Specify theme pizza chart -> dark, black, white. Default set dark","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pizza.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for plotting percentile/pizza plots — plot_pizza","text":"ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pizza.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for plotting percentile/pizza plots — plot_pizza","text":"best image quality use: ggsave(\"image.png\", width = 2900, height = 2800, units = \"px\")","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_pizza.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for plotting percentile/pizza plots — plot_pizza","text":"","code":"if (FALSE) { plot1 <- plot_pizza(data = data, type = \"comparison\", template = \"outfielder\",                     player_1 = \"Nicolo Barella\", player_2 = \"Ilkay Gundogan\",                     season_player_1 = \"Last 365 Days Men's Big 5 Leagues, UCL, UEL\",                      season_player_2 = \"Last 365 Days Men's Big 5 Leagues, UCL, UEL\",                     color_compare = \"lightgreen\", theme = \"black\") plot1  plot2 <- plot_pizza(data = data1, type = \"single\", template = \"outfielder\",                     color_possession = \"green\", color_attack = \"lightblue\",                      season = \"Last 365 Days Men's Big 5 Leagues, UCL, UEL\",                     color_defense = \"red\", theme = \"dark\") plot2 }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting scatter plots — plot_scatter","title":"Plotting scatter plots — plot_scatter","text":"function allows plot various types plots passes sort input. Compatible data frame data type. Returns ggplot object.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting scatter plots — plot_scatter","text":"","code":"plot_scatter(   data,   x = \"\",   y = \"\",   label = \"\",   set_size_num = 5,   set_size_var = \"\",   set_color_num = \"red\",   set_color_var = \"\",   title = \"\",   title_size = 25,   subtitle = \"\",   subtitle_size = 15,   caption = \"\",   caption_size = 10,   theme = \"classic\" )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting scatter plots — plot_scatter","text":"data dataframe passed plotting. x name column name data used x-axis y name column name data used y-axis label name column name data label scatter plot set_size_num sets size points set constant. Default size = 5. set_size_var Enter name column name data set size based variable. set_color_num sets color points set constant. Can enter hexcode valid ggplot2 color. Default = \"red\" set_color_var Enter name column name data set color based variable. title pick title scatter plot title_size sets size title scatter plot. Default size = 25. subtitle pick subtitle scatter plot subtitle_size sets size subtitle scatter plot Default size = 15. caption pick caption scatter plot caption_size sets size caption scatter plot. Default size = 10. theme decide theme plot four choices: classic, minimal, grey, bw. Default = \"classic\"","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting scatter plots — plot_scatter","text":"returns ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting scatter plots — plot_scatter","text":"","code":"if (FALSE) { plot <- plot_scatter(data, x = \"player\", y = \"age\", label = \"team\") plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_shot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for plotting shots — plot_shot","title":"Function for plotting shots — plot_shot","text":"function allows data, scraped Understat, used plotting shots.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_shot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for plotting shots — plot_shot","text":"","code":"plot_shot(   data,   type = \"\",   bins = 30,   highlight_goals = \"\",   average_location = \"\",   theme = \"\" )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_shot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for plotting shots — plot_shot","text":"data Dataframe houses shot data. Dataframe must contain atleast following columns: X,Y,xG,result,name type Type showcasing shotmap: hexbin, density, point (default) bins Bin size creating bins. Use using hexbin shotmap. argument name underlying call geom_hex(). Default = 30. highlight_goals choose display goals different color. average_location removing lines denoting average location shots need . theme Theme preferences display: dark (default), white, rose, almond","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_shot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for plotting shots — plot_shot","text":"ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_shot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for plotting shots — plot_shot","text":"","code":"if (FALSE) { plot <- plot_shot(data, type = \"hexbin\", bins = 20,  average_location = TRUE, highlight_goals = FALSE) }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_sonar.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for plotting pass sonars — plot_sonar","title":"Function for plotting pass sonars — plot_sonar","text":"function allows data, can Opta Statsbomb, used plotting pass sonars.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_sonar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for plotting pass sonars — plot_sonar","text":"","code":"plot_sonar(data, data_type = \"statsbomb\", title = \"\")"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_sonar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for plotting pass sonars — plot_sonar","text":"data Dataframe houses pass data. Dataframe must contain atleast following columns: x, y, finalX, finalY data_type Type data put : opta statsbomb. Default set \"statsbomb\" title Title passing sonar plot","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_sonar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for plotting pass sonars — plot_sonar","text":"ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_sonar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for plotting pass sonars — plot_sonar","text":"","code":"if (FALSE) { plot <- plot_sonar(data, data_type = \"statsbomb\") plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Create timeline charts (xG) using 'understat' event data. — plot_timeline","title":"Create timeline charts (xG) using 'understat' event data. — plot_timeline","text":"function allows make match timelines using data collected event--event.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create timeline charts (xG) using 'understat' event data. — plot_timeline","text":"","code":"plot_timeline(   data,   match_year,   team_home,   team_away,   color_home,   color_away,   theme = \"\" )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create timeline charts (xG) using 'understat' event data. — plot_timeline","text":"data Data, now compatible understat data. match_year year match played. team_home home team according data. team_away away team according data. color_home line colour home team. color_away line colour away team. theme Choose 4 ggplot2 themes -> dark, almond, rose, white.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_timeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create timeline charts (xG) using 'understat' event data. — plot_timeline","text":"ggplot2 object xG timeline plot","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_timeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create timeline charts (xG) using 'understat' event data. — plot_timeline","text":"","code":"if (FALSE) { plot <- plot_timeline(data = data, match_year = 2021,                        team_home = \"Manchester United\", team_away = \"Liverpool\",                       color_home = \"#e31a1c\", color_away = \"#980043\", theme = \"dark\") plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_trendline.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for plotting xG Trendline with FBref/ StatsBomb data. — plot_trendline","title":"Function for plotting xG Trendline with FBref/ StatsBomb data. — plot_trendline","text":"data can scraped FBref. Dataframe passed must following column names:  Date (format: year-month-day).yyyy-mm-dd,  Home_xG (xG Home Team),  Away_xG (xG Away Team),  Home (Home Team),  Away (Away Team)","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_trendline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for plotting xG Trendline with FBref/ StatsBomb data. — plot_trendline","text":"","code":"plot_trendline(data, team, color_xg, color_xga, rolling_average, theme = \"\")"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_trendline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for plotting xG Trendline with FBref/ StatsBomb data. — plot_trendline","text":"data dataset used. Select number matches wanted viz beforehand. team select specific team viz. Team must accurate per FBref specifications. color_xg selecting color xGoals. color_xga selecting color xGoalsAgainst. rolling_average setting rolling average data. theme select theme 4 options -> dark, almond, rose, white.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_trendline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for plotting xG Trendline with FBref/ StatsBomb data. — plot_trendline","text":"best clarity, export plot 2000x1000 png","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_trendline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for plotting xG Trendline with FBref/ StatsBomb data. — plot_trendline","text":"","code":"if (FALSE) { plot <- plot_trendline(data = pl, team = \"Tottenham\",                        color_xg = \"#08519c\", color_xga = \"#cb181d\",                        rolling_average = 10, theme = \"dark\") plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_voronoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for plotting voronoi diagrams on the pitch — plot_voronoi","title":"Function for plotting voronoi diagrams on the pitch — plot_voronoi","text":"function allows creation voronoi diagrams football pitch either Opta Statsbomb data.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_voronoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for plotting voronoi diagrams on the pitch — plot_voronoi","text":"","code":"plot_voronoi(   data,   data_type = \"statsbomb\",   colour = \"#E74C3C\",   fill = \"\",   alpha = 0.4,   title = \"\",   theme = \"dark\" )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_voronoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for plotting voronoi diagrams on the pitch — plot_voronoi","text":"data Dataframe houses pass data. Opta/Statsbomb dataframe must contain atleast following columns: x, y data_type Type data put : opta statsbomb. Default set \"statsbomb\". colour colour points voronoi plot. fill Name column add fill component plot alpha Alpha value opacity fill. Default set 0.4 title Title plot. theme Indicates theme map must shown : dark (default), white, rose, almond.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_voronoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for plotting voronoi diagrams on the pitch — plot_voronoi","text":"ggplot2 object","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/plot_voronoi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for plotting voronoi diagrams on the pitch — plot_voronoi","text":"","code":"if (FALSE) { plot <- plot_voronoi(data = data, colour = \"blue\", title = \"Team 1\") plot }"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/shift_column.html","id":null,"dir":"Reference","previous_headings":"","what":"shift_column — shift_column","title":"shift_column — shift_column","text":"Port shift.column() Jared Lander's useful package minor changes.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/shift_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shift_column — shift_column","text":"","code":"shift_column(   data,   columns,   new_names = sprintf(\"%s.Shifted\", columns),   len = 1L,   up = TRUE )"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/shift_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"shift_column — shift_column","text":"data data columns columns shift new_names New name shifted columns, Default: sprintf(\"%s.Shifted\", columns) len length rows shift, Default: 1 shift rows (TRUE) (FALSE), Default: TRUE","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/shift_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"shift_column — shift_column","text":"data.frame shifted columns","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/text_wrap.html","id":null,"dir":"Reference","previous_headings":"","what":"text_wrap — text_wrap","title":"text_wrap — text_wrap","text":"Wrap text using stringi mimic stringr","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/text_wrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"text_wrap — text_wrap","text":"","code":"text_wrap(x)"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/text_wrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"text_wrap — text_wrap","text":"x text vector","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/text_wrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"text_wrap — text_wrap","text":"text vector","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/viridis_d_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"viridis_d_pal — viridis_d_pal","title":"viridis_d_pal — viridis_d_pal","text":"Viridis palette hex codes. Used plot_passflow() function. Created Stefan van der Walt & Nathaniel Smith matplotlib.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/viridis_d_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"viridis_d_pal — viridis_d_pal","text":"","code":"viridis_d_pal"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/viridis_d_pal.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"viridis_d_pal — viridis_d_pal","text":"object class character length 256.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/xTGrid.html","id":null,"dir":"Reference","previous_headings":"","what":"xT calculation data for analysis — xTGrid","title":"xT calculation data for analysis — xTGrid","text":"simple dataframe used calculating expected threat values","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/xTGrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xT calculation data for analysis — xTGrid","text":"","code":"xTGrid"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/xTGrid.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"xT calculation data for analysis — xTGrid","text":"dataframe 12 columns 8 rows spanning football pitch.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/zissou_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"title zissou_pal — zissou_pal","title":"title zissou_pal — zissou_pal","text":"'Zissou' palette hex codes. Useed plot_sonar() function. Created Karthik Ram wesanderson R package.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/reference/zissou_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"title zissou_pal — zissou_pal","text":"","code":"zissou_pal"},{"path":"https://abhiamishra.github.io/ggshakeR/reference/zissou_pal.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"title zissou_pal — zissou_pal","text":"object class character length 10.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/news/index.html","id":"ggshaker-0209002","dir":"Changelog","previous_headings":"","what":"ggshakeR 0.2.0.9002","title":"ggshakeR 0.2.0.9002","text":"Fixes bugs plot_pizza custom option comparison plot issue #123.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/news/index.html","id":"ggshaker-0209001","dir":"Changelog","previous_headings":"","what":"ggshakeR 0.2.0.9001","title":"ggshakeR 0.2.0.9001","text":"Changed stat selection named stats instead selecting row numbers, change FBRef data changes. Added method de-duplicate stats returned multiple positions, causing errors. Changed season default argument “Last 365 Days Men’s Big 5 Leagues, UCL, UEL” match FBRef data men’s big 5 league players. (makes caption wider , split two lines) Replaced long |-statements %%. Deleted old unused code.","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/news/index.html","id":"ggshaker-0209000","dir":"Changelog","previous_headings":"","what":"ggshakeR 0.2.0.9000","title":"ggshakeR 0.2.0.9000","text":"Fixed plot_heatmap verification assessment issue #101 Fixed pkgdown build issues issue #104 Fixed plot_passnet direction orientation issue #108 Fixed plot_heatmap plot_passflowdirection orientation + plot_passopta functionality fixed.issue #111 Added “Created using ggshakeR” plot_heatmap, plot_passflow, plot_passissue #110 Added “Created using ggshakeR” rest functions issue #110 Converted plot_pizza work new FBRef data Opta. issue #118","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/news/index.html","id":"ggshaker-020","dir":"Changelog","previous_headings":"","what":"ggshakeR 0.2.0","title":"ggshakeR 0.2.0","text":"Use snake_case: binSize bin_size, dataType data_type, etc. Data arguments conform data Use US spelling: color rather colour, etc. Argument names made longer clarity: subt_size subtitle_size, roll_avg rolling_average, etc. See issue #27 plot_convexhull() & hull_fun() utility function: See issue #28 plot_voronoi() function: See issue #28 plot_passnet() function: See issue #31, issue #53 calculate_epv() function: See issue #25 Created vignettes new functions: See issue #45 Improved plot_pizza(): See issue #37 Added jdp pitch type option plot_heatmap(): See issue #37 Simplified plot_pass(): See issue #64 See issue #44 See issue #21, issue #29, issue #32, issue #33, issue #47, issue #56, issue #58, issue #59, issue #62, issue #66, issue #76, issue #78, issue #81, issue #82, issue #88, issue #101","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/news/index.html","id":"ggshaker-012","dir":"Changelog","previous_headings":"","what":"ggshakeR 0.1.2","title":"ggshakeR 0.1.2","text":"See issue #20","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/news/index.html","id":"ggshaker-011","dir":"Changelog","previous_headings":"","what":"ggshakeR 0.1.1","title":"ggshakeR 0.1.1","text":"codecov test coverage checks R Package Build checks lintr checks Build pkgdown website","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/news/index.html","id":"ggshaker-010","dir":"Changelog","previous_headings":"","what":"ggshakeR 0.1.0","title":"ggshakeR 0.1.0","text":"Added plot_timeline() function Added vignettes: Expected Treat, Pitch Plots, Pizza Plots Created pkgdown website Added plot_sonar() function Updated tests Fixed plot_pass(), plot_passflow(), plot_heatmap() functions get plot positions proper side field Package review (Ryo N.). See issue #9 Various solutions pass package checks. See issue #12","code":""},{"path":"https://abhiamishra.github.io/ggshakeR/news/index.html","id":"ggshaker-0009000","dir":"Changelog","previous_headings":"","what":"ggshakeR 0.0.0.9000","title":"ggshakeR 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
